@model StudentProject.Models.UserRegistrationViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Update User Record</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Here you can update your Record</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserId)

    <div class="form-group">
        @Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Lname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Hobbies, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.IsVerified, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsVerified,"",new { @Enabled = Model.IsVerified })
                @Html.ValidationMessageFor(model => model.IsVerified, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.CourseList, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">


            @Html.DropDownListFor(model => model.CourseId, Model.CourseList.Select(item => new SelectListItem
       {
           Value = item.CourseId.ToString(),
           Text = item.CourseName.ToString()

       }), "---Select Course---", new { id = "ddlCourse" })
            @Html.ValidationMessageFor(model => model.CourseList, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- this for adddress property-->
    <div class="form-group">
        @Html.LabelFor(model => model.CurrentAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.CurrentAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CurrentAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PermanentAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.PermanentAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PermanentAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Country.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* @Html.DropDownListFor(model => model.CountryList, htmlAttributes : new { @class = "form-control" })*@

            @Html.DropDownListFor(model => model.CountryId, Model.CountryList.Select(item => new SelectListItem
       {
           Value = item.CountryId.ToString(),
           Text = item.CountryName.ToString()

       }), "---Select Country---", new { id = "ddlCountry" })

            @Html.ValidationMessageFor(model => model.Country.CountryName, "", new { @class = "text-danger" })
        </div>
    </div>

    @*@*@*<div class="form-group">
        @Html.LabelFor(model => model.State.StateName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*<select id="state" name="StateId">...Select State..</select>*@

            @Html.DropDownList("state",Model.StateList.Select(item => new SelectListItem
       {
           Value = item.StateId.ToString(),
           Text = item.StateName.ToString()

       }),new { @Id="state", name = "StateId" , @class = "form-control" })
            @Html.ValidationMessageFor(model => model.State.StateName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City.CityName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*<select id="city" name="CityId">...Select City..</select>*@

            @Html.DropDownList("city",Model.CityList.Select(item => new SelectListItem
       {
           Value = item.CityId.ToString(),
           Text = item.CityName.ToString()

       }),new { @Id="city",name="CityId", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.City.CityName, "", new { @class = "text-danger" })
        </div>
    </div>*@*@*@

    <div class="form-group">
        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
}



<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script lang="javascript" type="text/javascript">

    $(document).ready(function ()
    {
        // this is for dropdown's
        $("#ddlCountry").change(function () {

            var id = $("#ddlCountry").val();

            $("#state").empty();
            $.getJSON("GetStates", { CountryId: id }, function (data)
            {
                var v = "<option>..Select State..</option>";
                $.each(data, function (i, v1)
                {
                    v += "<option Value=" + v1.StateId + ">" + v1.StateName + "</option>";
                });

                $("#state").html(v);

        });
        });
        $("#state").change(function () {

            var id = $("#state").val();
            $("#city").empty();
            $.getJSON("GetCities", { StateId: id }, function (data) {
                var v = "<option>..Select City..</option>";
                $.each(data, function (i, v1) {
                    console.log(v1);
                    v += "<option Value=" + v1.CityId + ">" + v1.CityName + "</option>";

                });
                $("#city").html(v);

            });
        });
     });


  

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

