 @model StudentProject.Models.UserRegistrationViewModel
@{
    ViewBag.Title = "Create New User";
}
<div>
    <div class="w3-container w3-teal">

        @using (Html.BeginForm("CreateUser","Default", new { @id = "myForm", @name = "myForm" }))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal" >
            <div class="w3-container success"><h2>Registration</h2></div>

            <hr />

            @*<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>*@


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })




            <div class="form-group">
                @Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @id = "FirstName", @class = "form-control", @placeholder = "First Name", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @id = "LastName", @class = "form-control", @placeholder = "Last Name", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.DateOfBirth, new { @id = "DOB", @class = "datefield", @type = "date", required = "required" })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Hobbies, new { htmlAttributes = new { @id = "Hobbies", @class = "form-control", @placeholder = "Hobbies", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @id = "txtEmail", @class = "form-control", @onfocusout = "CheckEmail()", @placeholder = "Email", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @id = "Password", @class = "form-control", @placeholder = "Password", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(model => model.Gender, "M")
                    <span>Male</span>

                    @Html.RadioButtonFor(model => model.Gender, "F")
                    <span>Female</span>

                    @Html.RadioButtonFor(model => model.Gender, "O")
                    <span>Others</span>
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @id = "isActive", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsVerified, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsVerified, new { htmlAttributes = new { @id = "isVerified", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsVerified, "", new { @class = "text-danger" })
            </div>
        </div>*@


            <!-- just remember that here we have to bind first course name and its id to show here-->
            @*<div class="form-group">
            @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseId, new { htmlAttributes = new { @id = "Course Id", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>*@

            <!-- this for adddress property-->
            <div class="form-group" data-role="fieldcontain">
                @Html.LabelFor(model => model.CurrentAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.CurrentAddress, new { htmlAttributes = new { @class = "form-control", @placeholder = "Current Address", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.CurrentAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" data-role="fieldcontain">
                @Html.LabelFor(model => model.PermanentAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.PermanentAddress, new { htmlAttributes = new { @class = "form-control", @placeholder = "Permanent Address", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.PermanentAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" >
                @Html.LabelFor(model => model.Country.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @* @Html.DropDownListFor(model => model.CountryList, htmlAttributes : new { @class = "form-control" })*@

                    @Html.DropDownListFor(model => model.CountryId, Model.CountryList.Select(item => new SelectListItem
               {
                   Value = item.CountryId.ToString(),
                   Text = item.CountryName.ToString()

               }), "---Select Country---", new { id = "ddlCountry"})

                    @Html.ValidationMessageFor(model => model.Country.CountryName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" data-role="fieldcontain">
                @Html.LabelFor(model => model.State.StateName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="state" name="StateId"  class = "form-control">...Select State..</select>

                    @*@Html.DropDownList("ddlState",Model.StateList.Select(item => new SelectListItem
                {
                  Value = item.StateId.ToString(),
                  Text = item.StateName.ToString()

                }),new { @Id="ddlState" })*@
                    @Html.ValidationMessageFor(model => model.State.StateName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" data-role="fieldcontain">
                @Html.LabelFor(model => model.City.CityName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="city" name="CityId" class = "form-control">...Select City..</select>

                    @*@Html.DropDownList("ddlCity",Model.CityList.Select(item => new SelectListItem
                {
                  Value = item.CityId.ToString(),
                  Text = item.CityName.ToString()

                }),new { @Id="ddlCity" })*@
                    @Html.ValidationMessageFor(model => model.City.CityName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Zip Code", required = "@required" } })
                    @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.RoleList, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DropDownListFor(model=>model.RoleId,Model.RoleList as Enumerable)*@
                    @Html.DropDownListFor(model => model.RoleId, Model.RoleList.Select(item => new SelectListItem
               {

                   Value = item.RoleId.ToString(),
                   Text = item.RoleName.ToString()

               }), "---Select Role---", new { id = "ddlGetRoles", required = "required", @onchange = "toggleDIvDisplay(this.value);" })
                    @Html.ValidationMessageFor(model => model.RoleList, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="divCourse" style="display:none;">
                @Html.LabelFor(model => model.CourseList, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CourseId, Model.CourseList.Select(item => new SelectListItem
               {
                   Value = item.CourseId.ToString(),
                   Text = item.CourseName.ToString()

               }), "---Select Course---", new { id = "ddlCourse"})
                    @Html.ValidationMessageFor(model => model.CourseList, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SecurityPIN, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.SecurityPIN, new { htmlAttributes = new { @id = "SecurityPIN", @class = "form-control", @placeholder = "SecurityPIN", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.SecurityPIN, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" onsubmit="return formValidate()" class="btn btn-success" />
                </div>
            </div>
        </div>
        }


    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script lang="javascript" type="text/javascript">
    //this is for course to be  hide when role is admin and superadmin
    

    $(document).ready(function ()
    {
        // this is for dropdown's
        $("#ddlCountry").change(function () {

            var id = $("#ddlCountry").val();
           
            $("#state").empty();
            $.getJSON("GetStates", { CountryId: id }, function (data)
            {
                var v = "<option>..Select State..</option>";
                $.each(data, function (i, v1)
                {
                    v += "<option Value=" + v1.StateId + ">" + v1.StateName + "</option>";
                });

                $("#state").html(v);
            
            });

             
            //$("#ddlGetRoles").change(function () {
            //    if ($("#ddlGetRoles").selectedIndex == 1 || $("#ddlGetRoles").selectedIndex == 4) {
            //        $("#ddlCourse").disableSelection(true);

            //    }
            //}
           



        });
        $("#state").change(function () {

            var id = $("#state").val();
            $("#city").empty();
            $.getJSON("GetCities", { StateId: id }, function (data) {
                var v = "<option>..Select City..</option>";
                $.each(data, function (i, v1) {
                    console.log(v1);
                    v += "<option Value=" + v1.CityId + ">" + v1.CityName + "</option>";

                });
                $("#city").html(v);
               
            });
        });
     });


    function validateForm() {
        var x = document.forms["myForm"]["ddlCourse"].value;
        if (x == "") {
            alert("Course must be filled out");
            return false;
        }
    }
    


    //this is for checking email
     function CheckEmail() {
        debugger;
        var Email = $("#txtEmail").val();
        $.ajax({
            type: "POST",
            url: "../Default/CheckEmailExistence",
            data: {"Email":Email},
           // contentType: "json; charset=utf-8",
            dataType: "json",
            //dataType: "json",
            success: OnSuccess,
            failure: function (response) {
                alert(response);
            }  

        });
    }

    //// function OnSuccess  
    //function OnSuccess(response) {
    //    var msg = $("#<%=lblStatus.ClientID%>")[0];
    //    switch (response.d) {
    //        case "true":
    //            msg.style.display = "block";
    //            msg.style.color = "red";
    //            msg.innerHTML = "User Name Or Email already exists.";
    //            break;
    //        case "false":
    //            msg.style.display = "block";
    //            msg.style.color = "green";
    //            msg.innerHTML = "User Name Or Email Available";
    //            break;
    //    }
    //}  
    function OnSuccess(response) {
                 //alert(response +" ");
                //var message = $("#message");
                 if (response == "true")
                 {
                     alert("email already exist");
                     $('#txtEmail').val('');
                    return false;
                    //Email available.
                   
                 }
                 else {
                     //alert("email");
                     return true;
                    ////Email not available.
                    //message.css("color", "green");
                    //message.html("Email is NOT available");
                   }
    }

    //Jquery for Hiding Course Div
    function toggleDIvDisplay(e)
    {

        if (e == 3) {
            $('#divCourse').show();
        }
        else
        {
            $('#divCourse').hide();
        }
        //if (e == "2" || e == "3")
        //    {
        //        if (e == "2")
        //        {

        //            $('#divCourse').hide();
        //        }
        //        else
        //        {
        //            $('#divCourse').show();
                   
        //        }
        //    }
            
        //else
        //{
        //    $('#divCourse').hide();
           
        //}
    }
     
</script>

